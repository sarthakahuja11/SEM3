#include<stdio.h>
#include<stdlib.h>

/* A linked list node */
typedef struct node
{
    int data;
    struct node *next;
}*NODE;

NODE push(NODE first,int val)
{
   NODE temp=(struct node *) malloc(sizeof(struct node));

    temp->data=val;
    temp->next=NULL;

    if(first==NULL)
    {
        return temp;
    }
    else
    {
        NODE cur=first;
        while(cur->next!=NULL)
            cur=cur->next;
        cur->next=temp;
        return first;
    }
}

/* Function to print nodes in a given linked list */
void printList(NODE first)
{
    while(first != NULL)
    {
        printf("%d ", first->data);
        first = first->next;
    }
}
/* deletes alternate nodes of a list starting with head */
void deleteAlt(NODE head)
{
    if (head == NULL)
        return;

    NODE node = head->next;

    if (node == NULL)
        return;

    /* Change the next link of head */
    head->next = node->next;

    /* free memory allocated for node */
    free(node);

    /* Recursively call for the new next of head */
    deleteAlt(head->next);
}
int main()
{
    NODE  a= NULL;

     a=push(a, 1);
     a=push(a, 2);
     a=push(a, 3);
     a=push(a, 4);
     a=push(a, 5);
     a=push(a, 6);
     a=push(a, 7);
     a=push(a, 8);
     a=push(a, 9);

     a=a->next;
     NODE ta=a;
     NODE temp=NULL;

     /*do
     {
          temp=NULL;
         temp=ta->next;
         ta->next=temp->next;
         temp->next=NULL;
         //free(temp);
     }while(ta!=NULL);*/
     deleteAlt(a);
     printList(a);

}
